17:27:32,431 graphrag.index.cli INFO Logging enabled at /home/cip/ce/ix05ogym/Majid/LLM/GraphRag/elec_graph/output_eval/indexing-engine.log
17:27:32,432 graphrag.index.cli INFO Starting pipeline run for: 20241101-172732, dryrun=False
17:27:32,433 graphrag.index.cli INFO Using default configuration: {
    "llm": {
        "api_key": "==== REDACTED ====",
        "type": "openai_chat",
        "model": "gpt-4o",
        "max_tokens": 4000,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "request_timeout": 180.0,
        "api_base": "http://localhost:8080/",
        "api_version": null,
        "proxy": null,
        "cognitive_services_endpoint": null,
        "deployment_name": null,
        "model_supports_json": true,
        "tokens_per_minute": 350000,
        "requests_per_minute": 50,
        "max_retries": 10,
        "max_retry_wait": 10.0,
        "sleep_on_rate_limit_recommendation": true,
        "concurrent_requests": 25
    },
    "parallelization": {
        "stagger": 0.3,
        "num_threads": 5
    },
    "async_mode": "asyncio",
    "root_dir": "/home/cip/ce/ix05ogym/Majid/LLM/GraphRag/elec_graph",
    "reporting": {
        "type": "file",
        "base_dir": "/home/cip/ce/ix05ogym/Majid/LLM/GraphRag/elec_graph/output_eval",
        "storage_account_blob_url": null
    },
    "storage": {
        "type": "file",
        "base_dir": "/home/cip/ce/ix05ogym/Majid/LLM/GraphRag/elec_graph/output_eval",
        "storage_account_blob_url": null
    },
    "cache": {
        "type": "none",
        "base_dir": "cache",
        "storage_account_blob_url": null
    },
    "input": {
        "type": "file",
        "file_type": "csv",
        "base_dir": "input_eval",
        "storage_account_blob_url": null,
        "encoding": "utf-8",
        "file_pattern": ".*\\.csv$",
        "file_filter": null,
        "source_column": null,
        "timestamp_column": null,
        "timestamp_format": null,
        "text_column": "text",
        "title_column": null,
        "document_attribute_columns": []
    },
    "embed_graph": {
        "enabled": true,
        "num_walks": 10,
        "walk_length": 40,
        "window_size": 2,
        "iterations": 3,
        "random_seed": 597832,
        "strategy": null
    },
    "embeddings": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_embedding",
            "model": "text",
            "max_tokens": 4000,
            "temperature": 0,
            "top_p": 1,
            "n": 1,
            "request_timeout": 180.0,
            "api_base": "http://localhost:8080/",
            "api_version": null,
            "proxy": null,
            "cognitive_services_endpoint": null,
            "deployment_name": null,
            "model_supports_json": null,
            "tokens_per_minute": 350000,
            "requests_per_minute": 10,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 5
        },
        "async_mode": "asyncio",
        "batch_size": 16,
        "batch_max_tokens": 8191,
        "target": "required",
        "skip": [],
        "vector_store": null,
        "strategy": null
    },
    "chunks": {
        "size": 1200,
        "overlap": 100,
        "group_by_columns": [
            "id"
        ],
        "strategy": null,
        "encoding_model": null
    },
    "snapshots": {
        "graphml": true,
        "raw_entities": true,
        "top_level_nodes": true
    },
    "entity_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "model": "gpt-4o",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "request_timeout": 180.0,
            "api_base": "http://localhost:8080/",
            "api_version": null,
            "proxy": null,
            "cognitive_services_endpoint": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 350000,
            "requests_per_minute": 50,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 5
        },
        "async_mode": "asyncio",
        "prompt": "prompts/entity_extraction.txt",
        "entity_types": [
            "THINGS"
        ],
        "max_gleanings": 2,
        "strategy": null,
        "encoding_model": null
    },
    "summarize_descriptions": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "model": "gpt-4o",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "request_timeout": 180.0,
            "api_base": "http://localhost:8080/",
            "api_version": null,
            "proxy": null,
            "cognitive_services_endpoint": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 350000,
            "requests_per_minute": 50,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 5
        },
        "async_mode": "asyncio",
        "prompt": "prompts/summarize_descriptions.txt",
        "max_length": 500,
        "strategy": null
    },
    "community_reports": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "model": "gpt-4o",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "request_timeout": 180.0,
            "api_base": "http://localhost:8080/",
            "api_version": null,
            "proxy": null,
            "cognitive_services_endpoint": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 350000,
            "requests_per_minute": 50,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 5
        },
        "async_mode": "asyncio",
        "prompt": "prompts/community_report.txt",
        "max_length": 2000,
        "max_input_length": 8000,
        "strategy": null
    },
    "claim_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "model": "gpt-4o",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "request_timeout": 180.0,
            "api_base": "http://localhost:8080/",
            "api_version": null,
            "proxy": null,
            "cognitive_services_endpoint": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 350000,
            "requests_per_minute": 50,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 5
        },
        "async_mode": "asyncio",
        "enabled": false,
        "prompt": "prompts/claim_extraction.txt",
        "description": "Any claims or facts that could be relevant to information discovery.",
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": null
    },
    "cluster_graph": {
        "max_cluster_size": 10,
        "strategy": null
    },
    "umap": {
        "enabled": true
    },
    "local_search": {
        "text_unit_prop": 0.5,
        "community_prop": 0.1,
        "conversation_history_max_turns": 5,
        "top_k_entities": 10,
        "top_k_relationships": 10,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "global_search": {
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "map_max_tokens": 1000,
        "reduce_max_tokens": 2000,
        "concurrency": 32
    },
    "encoding_model": "cl100k_base",
    "skip_workflows": [
        ""
    ]
}
17:27:32,434 graphrag.index.create_pipeline_config INFO skipping workflows 
17:27:32,434 graphrag.index.run.run INFO Running pipeline
17:27:32,435 graphrag.index.storage.file_pipeline_storage INFO Creating file storage at /home/cip/ce/ix05ogym/Majid/LLM/GraphRag/elec_graph/output_eval
17:27:32,436 graphrag.index.input.load_input INFO loading input from root_dir=input_eval
17:27:32,436 graphrag.index.input.load_input INFO using file storage for input
17:27:32,437 graphrag.index.input.csv INFO Loading csv files from input_eval
17:27:32,437 graphrag.index.storage.file_pipeline_storage INFO search /home/cip/ce/ix05ogym/Majid/LLM/GraphRag/elec_graph/input_eval for files matching .*\.csv$
17:27:32,440 graphrag.index.input.csv INFO Found 1 csv files, loading 1
17:27:32,440 graphrag.index.input.csv INFO Total number of unfiltered csv rows: 1
17:27:32,441 graphrag.index.workflows.load INFO Workflow Run Order: ['create_base_text_units', 'create_base_entity_graph', 'create_final_entities', 'create_final_nodes', 'create_final_communities', 'create_final_relationships', 'create_final_text_units', 'create_final_community_reports', 'create_final_documents']
17:27:32,442 graphrag.index.run.run INFO Final # of rows loaded: 1
17:27:32,551 graphrag.index.run.workflow INFO dependencies for create_base_text_units: []
17:27:32,553 datashaper.workflow.workflow INFO executing verb create_base_text_units
17:27:34,833 graphrag.index.emit.parquet_table_emitter INFO emitting parquet table create_base_text_units.parquet
17:27:34,958 graphrag.index.run.workflow INFO dependencies for create_base_entity_graph: ['create_base_text_units']
17:27:34,958 graphrag.utils.storage INFO read table from storage: create_base_text_units.parquet
17:27:34,966 datashaper.workflow.workflow INFO executing verb create_base_entity_graph
17:27:34,983 graphrag.llm.openai.create_openai_client INFO Creating OpenAI client base_url=http://localhost:8080
17:27:35,21 graphrag.index.llm.load_llm INFO create TPM/RPM limiter for gpt-4o: TPM=350000, RPM=50
17:27:35,21 graphrag.index.llm.load_llm INFO create concurrency limiter for gpt-4o: 25
17:27:35,46 graphrag.callbacks.file_workflow_callbacks INFO Error Invoking LLM details={'input': '\n-Goal-\nGiven a text document that is potentially relevant to this activity and identify all entities from the text and all relationships among the identified entities.\n \n-Steps-\n1. Identify all entities. For each identified entity, extract the following information:\n- entity_name: Name of the entity, capitalized\n- entity_type: Which class the entity belogns to? The class has to be an specific term\n- entity_description: Comprehensive description of the entity\'s attributes and activities\nFormat each entity as ("entity"<|><entity_name><|><entity_type><|><entity_description>)\n \n2. From the entities identified in step 1, identify all pairs of (source_entity, target_entity) that are *clearly related* to each other.\nFor each pair of related entities, extract the following information:\n- source_entity: name of the source entity, as identified in step 1\n- target_entity: name of the target entity, as identified in step 1\n- relationship_description: explanation as to why you think the source entity and the target entity are related to each other\n- relationship_strength: a numeric score indicating strength of the relationship between the source entity and target entity\n Format each relationship as ("relationship"<|><source_entity><|><target_entity><|><relationship_description><|><relationship_strength>)\n \n3. Return output in English as a single list of all the entities and relationships identified in steps 1 and 2. Use **##** as the list delimiter.\n \n4. When finished, output <|COMPLETE|>\n \n######################\n-Examples-\n######################\nExample 1:\nText:\nThe Verdantis\'s Central Institution is scheduled to meet on Monday and Thursday, with the institution planning to release its latest policy decision on Thursday at 1:30 p.m. PDT, followed by a press conference where Central Institution Chair Martin Smith will take questions. Investors expect the Market Strategy Committee to hold its benchmark interest rate steady in a range of 3.5%-3.75%.\n######################\nOutput:\n("entity"<|>CENTRAL INSTITUTION<|>ORGANIZATION<|>The Central Institution is the Federal Reserve of Verdantis, which is setting interest rates on Monday and Thursday)\n##\n("entity"<|>MARTIN SMITH<|>PERSON<|>Martin Smith is the chair of the Central Institution)\n##\n("entity"<|>MARKET STRATEGY COMMITTEE<|>ORGANIZATION<|>The Central Institution committee makes key decisions about interest rates and the growth of Verdantis\'s money supply)\n##\n("relationship"<|>MARTIN SMITH<|>CENTRAL INSTITUTION<|>Martin Smith is the Chair of the Central Institution and will answer questions at a press conference<|>9)\n<|COMPLETE|>\n\n######################\nExample 2:\nText:\nTechGlobal\'s (TG) stock skyrocketed in its opening day on the Global Exchange Thursday. But IPO experts warn that the semiconductor corporation\'s debut on the public markets isn\'t indicative of how other newly listed companies may perform.\n\nTechGlobal, a formerly public company, was taken private by Vision Holdings in 2014. The well-established chip designer says it powers 85% of premium smartphones.\n######################\nOutput:\n("entity"<|>TECHGLOBAL<|>ORGANIZATION<|>TechGlobal is a stock now listed on the Global Exchange which powers 85% of premium smartphones)\n##\n("entity"<|>VISION HOLDINGS<|>ORGANIZATION<|>Vision Holdings is a firm that previously owned TechGlobal)\n##\n("relationship"<|>TECHGLOBAL<|>VISION HOLDINGS<|>Vision Holdings formerly owned TechGlobal from 2014 until present<|>5)\n<|COMPLETE|>\n\n######################\nExample 3:\nText:\nFive Aurelians jailed for 8 years in Firuzabad and widely regarded as hostages are on their way home to Aurelia.\n\nThe swap orchestrated by Quintara was finalized when $8bn of Firuzi funds were transferred to financial institutions in Krohaara, the capital of Quintara.\n\nThe exchange initiated in Firuzabad\'s capital, Tiruzia, led to the four men and one woman, who are also Firuzi nationals, boarding a chartered flight to Krohaara.\n\nThey were welcomed by senior Aurelian officials and are now on their way to Aurelia\'s capital, Cashion.\n\nThe Aurelians include 39-year-old businessman Samuel Namara, who has been held in Tiruzia\'s Alhamia Prison, as well as journalist Durke Bataglani, 59, and environmentalist Meggie Tazbah, 53, who also holds Bratinas nationality.\n######################\nOutput:\n("entity"<|>FIRUZABAD<|>GEO<|>Firuzabad held Aurelians as hostages)\n##\n("entity"<|>AURELIA<|>GEO<|>Country seeking to release hostages)\n##\n("entity"<|>QUINTARA<|>GEO<|>Country that negotiated a swap of money in exchange for hostages)\n##\n##\n("entity"<|>TIRUZIA<|>GEO<|>Capital of Firuzabad where the Aurelians were being held)\n##\n("entity"<|>KROHAARA<|>GEO<|>Capital city in Quintara)\n##\n("entity"<|>CASHION<|>GEO<|>Capital city in Aurelia)\n##\n("entity"<|>SAMUEL NAMARA<|>PERSON<|>Aurelian who spent time in Tiruzia\'s Alhamia Prison)\n##\n("entity"<|>ALHAMIA PRISON<|>GEO<|>Prison in Tiruzia)\n##\n("entity"<|>DURKE BATAGLANI<|>PERSON<|>Aurelian journalist who was held hostage)\n##\n("entity"<|>MEGGIE TAZBAH<|>PERSON<|>Bratinas national and environmentalist who was held hostage)\n##\n("relationship"<|>FIRUZABAD<|>AURELIA<|>Firuzabad negotiated a hostage exchange with Aurelia<|>2)\n##\n("relationship"<|>QUINTARA<|>AURELIA<|>Quintara brokered the hostage exchange between Firuzabad and Aurelia<|>2)\n##\n("relationship"<|>QUINTARA<|>FIRUZABAD<|>Quintara brokered the hostage exchange between Firuzabad and Aurelia<|>2)\n##\n("relationship"<|>SAMUEL NAMARA<|>ALHAMIA PRISON<|>Samuel Namara was a prisoner at Alhamia prison<|>8)\n##\n("relationship"<|>SAMUEL NAMARA<|>MEGGIE TAZBAH<|>Samuel Namara and Meggie Tazbah were exchanged in the same hostage release<|>2)\n##\n("relationship"<|>SAMUEL NAMARA<|>DURKE BATAGLANI<|>Samuel Namara and Durke Bataglani were exchanged in the same hostage release<|>2)\n##\n("relationship"<|>MEGGIE TAZBAH<|>DURKE BATAGLANI<|>Meggie Tazbah and Durke Bataglani were exchanged in the same hostage release<|>2)\n##\n("relationship"<|>SAMUEL NAMARA<|>FIRUZABAD<|>Samuel Namara was a hostage in Firuzabad<|>2)\n##\n("relationship"<|>MEGGIE TAZBAH<|>FIRUZABAD<|>Meggie Tazbah was a hostage in Firuzabad<|>2)\n##\n("relationship"<|>DURKE BATAGLANI<|>FIRUZABAD<|>Durke Bataglani was a hostage in Firuzabad<|>2)\n<|COMPLETE|>\n######################\n-Real Data-\n######################\nText:\nPrinted circuit board\nElectronics assemblies are based on use of a printed circuit board of one\nform or another to hold components. Construction of these printed circuit\nboards is critical to soldering processes in that different printed circuit\nboard types have different thermal characteristics which can greatly affect\nhow they must be soldered.\nIn principle a printed circuit board (PCB) sometimes called a printed\nwiring board (PWB) or simply printed board comprises: a base which is\na thin board of insulating material supporting all the components which\nmake up a circuit; conducting tracks usually copper on one or bOth sides\nof the base making up the interconnections between components. Component\nconnecting leads are electrically connected in some form of permanent\nor semi-permanent way usually by soldering to lands sometimes called\npads ~ the areas of track specially designated for component connection\npurposes. If lands have holes drilled or punched through the board to\nfacilitate component mounting the board is a through-hole printed circuit\nboard. If lands have no holes the board is a surface mounted printed circuit\nboard.\nTo clarify the term printed is somewhat misleading as tracks are not\nprinted directly onto the board. It refers instead to just one stage within the\nwhole printed circuit board manufacturing process where the conducting\ntrack layout sometimes called pattern or image may be produced using\nsome form of printing technique.\nPrinted circuit boards can be made in one of two main ways. First in an\nadditive process the conductive track may be added to the surface of the\nbase material. There\'s a number of ways in which this can be done. Second\nin a subtractive process where base material is supplied with its whole\nsurface covered with a conductive layer track pattern is defined and excess\nconductive material is removed leaving the required track. Sometimes\nboth processes may be combined to produce printed circuit boards with\nmore than one layer of conductive track.\n######################\nOutput:'}
17:27:36,855 graphrag.callbacks.file_workflow_callbacks INFO Error Invoking LLM details={'input': '\n-Goal-\nGiven a text document that is potentially relevant to this activity and identify all entities from the text and all relationships among the identified entities.\n \n-Steps-\n1. Identify all entities. For each identified entity, extract the following information:\n- entity_name: Name of the entity, capitalized\n- entity_type: Which class the entity belogns to? The class has to be an specific term\n- entity_description: Comprehensive description of the entity\'s attributes and activities\nFormat each entity as ("entity"<|><entity_name><|><entity_type><|><entity_description>)\n \n2. From the entities identified in step 1, identify all pairs of (source_entity, target_entity) that are *clearly related* to each other.\nFor each pair of related entities, extract the following information:\n- source_entity: name of the source entity, as identified in step 1\n- target_entity: name of the target entity, as identified in step 1\n- relationship_description: explanation as to why you think the source entity and the target entity are related to each other\n- relationship_strength: a numeric score indicating strength of the relationship between the source entity and target entity\n Format each relationship as ("relationship"<|><source_entity><|><target_entity><|><relationship_description><|><relationship_strength>)\n \n3. Return output in English as a single list of all the entities and relationships identified in steps 1 and 2. Use **##** as the list delimiter.\n \n4. When finished, output <|COMPLETE|>\n \n######################\n-Examples-\n######################\nExample 1:\nText:\nThe Verdantis\'s Central Institution is scheduled to meet on Monday and Thursday, with the institution planning to release its latest policy decision on Thursday at 1:30 p.m. PDT, followed by a press conference where Central Institution Chair Martin Smith will take questions. Investors expect the Market Strategy Committee to hold its benchmark interest rate steady in a range of 3.5%-3.75%.\n######################\nOutput:\n("entity"<|>CENTRAL INSTITUTION<|>ORGANIZATION<|>The Central Institution is the Federal Reserve of Verdantis, which is setting interest rates on Monday and Thursday)\n##\n("entity"<|>MARTIN SMITH<|>PERSON<|>Martin Smith is the chair of the Central Institution)\n##\n("entity"<|>MARKET STRATEGY COMMITTEE<|>ORGANIZATION<|>The Central Institution committee makes key decisions about interest rates and the growth of Verdantis\'s money supply)\n##\n("relationship"<|>MARTIN SMITH<|>CENTRAL INSTITUTION<|>Martin Smith is the Chair of the Central Institution and will answer questions at a press conference<|>9)\n<|COMPLETE|>\n\n######################\nExample 2:\nText:\nTechGlobal\'s (TG) stock skyrocketed in its opening day on the Global Exchange Thursday. But IPO experts warn that the semiconductor corporation\'s debut on the public markets isn\'t indicative of how other newly listed companies may perform.\n\nTechGlobal, a formerly public company, was taken private by Vision Holdings in 2014. The well-established chip designer says it powers 85% of premium smartphones.\n######################\nOutput:\n("entity"<|>TECHGLOBAL<|>ORGANIZATION<|>TechGlobal is a stock now listed on the Global Exchange which powers 85% of premium smartphones)\n##\n("entity"<|>VISION HOLDINGS<|>ORGANIZATION<|>Vision Holdings is a firm that previously owned TechGlobal)\n##\n("relationship"<|>TECHGLOBAL<|>VISION HOLDINGS<|>Vision Holdings formerly owned TechGlobal from 2014 until present<|>5)\n<|COMPLETE|>\n\n######################\nExample 3:\nText:\nFive Aurelians jailed for 8 years in Firuzabad and widely regarded as hostages are on their way home to Aurelia.\n\nThe swap orchestrated by Quintara was finalized when $8bn of Firuzi funds were transferred to financial institutions in Krohaara, the capital of Quintara.\n\nThe exchange initiated in Firuzabad\'s capital, Tiruzia, led to the four men and one woman, who are also Firuzi nationals, boarding a chartered flight to Krohaara.\n\nThey were welcomed by senior Aurelian officials and are now on their way to Aurelia\'s capital, Cashion.\n\nThe Aurelians include 39-year-old businessman Samuel Namara, who has been held in Tiruzia\'s Alhamia Prison, as well as journalist Durke Bataglani, 59, and environmentalist Meggie Tazbah, 53, who also holds Bratinas nationality.\n######################\nOutput:\n("entity"<|>FIRUZABAD<|>GEO<|>Firuzabad held Aurelians as hostages)\n##\n("entity"<|>AURELIA<|>GEO<|>Country seeking to release hostages)\n##\n("entity"<|>QUINTARA<|>GEO<|>Country that negotiated a swap of money in exchange for hostages)\n##\n##\n("entity"<|>TIRUZIA<|>GEO<|>Capital of Firuzabad where the Aurelians were being held)\n##\n("entity"<|>KROHAARA<|>GEO<|>Capital city in Quintara)\n##\n("entity"<|>CASHION<|>GEO<|>Capital city in Aurelia)\n##\n("entity"<|>SAMUEL NAMARA<|>PERSON<|>Aurelian who spent time in Tiruzia\'s Alhamia Prison)\n##\n("entity"<|>ALHAMIA PRISON<|>GEO<|>Prison in Tiruzia)\n##\n("entity"<|>DURKE BATAGLANI<|>PERSON<|>Aurelian journalist who was held hostage)\n##\n("entity"<|>MEGGIE TAZBAH<|>PERSON<|>Bratinas national and environmentalist who was held hostage)\n##\n("relationship"<|>FIRUZABAD<|>AURELIA<|>Firuzabad negotiated a hostage exchange with Aurelia<|>2)\n##\n("relationship"<|>QUINTARA<|>AURELIA<|>Quintara brokered the hostage exchange between Firuzabad and Aurelia<|>2)\n##\n("relationship"<|>QUINTARA<|>FIRUZABAD<|>Quintara brokered the hostage exchange between Firuzabad and Aurelia<|>2)\n##\n("relationship"<|>SAMUEL NAMARA<|>ALHAMIA PRISON<|>Samuel Namara was a prisoner at Alhamia prison<|>8)\n##\n("relationship"<|>SAMUEL NAMARA<|>MEGGIE TAZBAH<|>Samuel Namara and Meggie Tazbah were exchanged in the same hostage release<|>2)\n##\n("relationship"<|>SAMUEL NAMARA<|>DURKE BATAGLANI<|>Samuel Namara and Durke Bataglani were exchanged in the same hostage release<|>2)\n##\n("relationship"<|>MEGGIE TAZBAH<|>DURKE BATAGLANI<|>Meggie Tazbah and Durke Bataglani were exchanged in the same hostage release<|>2)\n##\n("relationship"<|>SAMUEL NAMARA<|>FIRUZABAD<|>Samuel Namara was a hostage in Firuzabad<|>2)\n##\n("relationship"<|>MEGGIE TAZBAH<|>FIRUZABAD<|>Meggie Tazbah was a hostage in Firuzabad<|>2)\n##\n("relationship"<|>DURKE BATAGLANI<|>FIRUZABAD<|>Durke Bataglani was a hostage in Firuzabad<|>2)\n<|COMPLETE|>\n######################\n-Real Data-\n######################\nText:\nPrinted circuit board\nElectronics assemblies are based on use of a printed circuit board of one\nform or another to hold components. Construction of these printed circuit\nboards is critical to soldering processes in that different printed circuit\nboard types have different thermal characteristics which can greatly affect\nhow they must be soldered.\nIn principle a printed circuit board (PCB) sometimes called a printed\nwiring board (PWB) or simply printed board comprises: a base which is\na thin board of insulating material supporting all the components which\nmake up a circuit; conducting tracks usually copper on one or bOth sides\nof the base making up the interconnections between components. Component\nconnecting leads are electrically connected in some form of permanent\nor semi-permanent way usually by soldering to lands sometimes called\npads ~ the areas of track specially designated for component connection\npurposes. If lands have holes drilled or punched through the board to\nfacilitate component mounting the board is a through-hole printed circuit\nboard. If lands have no holes the board is a surface mounted printed circuit\nboard.\nTo clarify the term printed is somewhat misleading as tracks are not\nprinted directly onto the board. It refers instead to just one stage within the\nwhole printed circuit board manufacturing process where the conducting\ntrack layout sometimes called pattern or image may be produced using\nsome form of printing technique.\nPrinted circuit boards can be made in one of two main ways. First in an\nadditive process the conductive track may be added to the surface of the\nbase material. There\'s a number of ways in which this can be done. Second\nin a subtractive process where base material is supplied with its whole\nsurface covered with a conductive layer track pattern is defined and excess\nconductive material is removed leaving the required track. Sometimes\nboth processes may be combined to produce printed circuit boards with\nmore than one layer of conductive track.\n######################\nOutput:'}
17:27:39,200 graphrag.callbacks.file_workflow_callbacks INFO Error Invoking LLM details={'input': '\n-Goal-\nGiven a text document that is potentially relevant to this activity and identify all entities from the text and all relationships among the identified entities.\n \n-Steps-\n1. Identify all entities. For each identified entity, extract the following information:\n- entity_name: Name of the entity, capitalized\n- entity_type: Which class the entity belogns to? The class has to be an specific term\n- entity_description: Comprehensive description of the entity\'s attributes and activities\nFormat each entity as ("entity"<|><entity_name><|><entity_type><|><entity_description>)\n \n2. From the entities identified in step 1, identify all pairs of (source_entity, target_entity) that are *clearly related* to each other.\nFor each pair of related entities, extract the following information:\n- source_entity: name of the source entity, as identified in step 1\n- target_entity: name of the target entity, as identified in step 1\n- relationship_description: explanation as to why you think the source entity and the target entity are related to each other\n- relationship_strength: a numeric score indicating strength of the relationship between the source entity and target entity\n Format each relationship as ("relationship"<|><source_entity><|><target_entity><|><relationship_description><|><relationship_strength>)\n \n3. Return output in English as a single list of all the entities and relationships identified in steps 1 and 2. Use **##** as the list delimiter.\n \n4. When finished, output <|COMPLETE|>\n \n######################\n-Examples-\n######################\nExample 1:\nText:\nThe Verdantis\'s Central Institution is scheduled to meet on Monday and Thursday, with the institution planning to release its latest policy decision on Thursday at 1:30 p.m. PDT, followed by a press conference where Central Institution Chair Martin Smith will take questions. Investors expect the Market Strategy Committee to hold its benchmark interest rate steady in a range of 3.5%-3.75%.\n######################\nOutput:\n("entity"<|>CENTRAL INSTITUTION<|>ORGANIZATION<|>The Central Institution is the Federal Reserve of Verdantis, which is setting interest rates on Monday and Thursday)\n##\n("entity"<|>MARTIN SMITH<|>PERSON<|>Martin Smith is the chair of the Central Institution)\n##\n("entity"<|>MARKET STRATEGY COMMITTEE<|>ORGANIZATION<|>The Central Institution committee makes key decisions about interest rates and the growth of Verdantis\'s money supply)\n##\n("relationship"<|>MARTIN SMITH<|>CENTRAL INSTITUTION<|>Martin Smith is the Chair of the Central Institution and will answer questions at a press conference<|>9)\n<|COMPLETE|>\n\n######################\nExample 2:\nText:\nTechGlobal\'s (TG) stock skyrocketed in its opening day on the Global Exchange Thursday. But IPO experts warn that the semiconductor corporation\'s debut on the public markets isn\'t indicative of how other newly listed companies may perform.\n\nTechGlobal, a formerly public company, was taken private by Vision Holdings in 2014. The well-established chip designer says it powers 85% of premium smartphones.\n######################\nOutput:\n("entity"<|>TECHGLOBAL<|>ORGANIZATION<|>TechGlobal is a stock now listed on the Global Exchange which powers 85% of premium smartphones)\n##\n("entity"<|>VISION HOLDINGS<|>ORGANIZATION<|>Vision Holdings is a firm that previously owned TechGlobal)\n##\n("relationship"<|>TECHGLOBAL<|>VISION HOLDINGS<|>Vision Holdings formerly owned TechGlobal from 2014 until present<|>5)\n<|COMPLETE|>\n\n######################\nExample 3:\nText:\nFive Aurelians jailed for 8 years in Firuzabad and widely regarded as hostages are on their way home to Aurelia.\n\nThe swap orchestrated by Quintara was finalized when $8bn of Firuzi funds were transferred to financial institutions in Krohaara, the capital of Quintara.\n\nThe exchange initiated in Firuzabad\'s capital, Tiruzia, led to the four men and one woman, who are also Firuzi nationals, boarding a chartered flight to Krohaara.\n\nThey were welcomed by senior Aurelian officials and are now on their way to Aurelia\'s capital, Cashion.\n\nThe Aurelians include 39-year-old businessman Samuel Namara, who has been held in Tiruzia\'s Alhamia Prison, as well as journalist Durke Bataglani, 59, and environmentalist Meggie Tazbah, 53, who also holds Bratinas nationality.\n######################\nOutput:\n("entity"<|>FIRUZABAD<|>GEO<|>Firuzabad held Aurelians as hostages)\n##\n("entity"<|>AURELIA<|>GEO<|>Country seeking to release hostages)\n##\n("entity"<|>QUINTARA<|>GEO<|>Country that negotiated a swap of money in exchange for hostages)\n##\n##\n("entity"<|>TIRUZIA<|>GEO<|>Capital of Firuzabad where the Aurelians were being held)\n##\n("entity"<|>KROHAARA<|>GEO<|>Capital city in Quintara)\n##\n("entity"<|>CASHION<|>GEO<|>Capital city in Aurelia)\n##\n("entity"<|>SAMUEL NAMARA<|>PERSON<|>Aurelian who spent time in Tiruzia\'s Alhamia Prison)\n##\n("entity"<|>ALHAMIA PRISON<|>GEO<|>Prison in Tiruzia)\n##\n("entity"<|>DURKE BATAGLANI<|>PERSON<|>Aurelian journalist who was held hostage)\n##\n("entity"<|>MEGGIE TAZBAH<|>PERSON<|>Bratinas national and environmentalist who was held hostage)\n##\n("relationship"<|>FIRUZABAD<|>AURELIA<|>Firuzabad negotiated a hostage exchange with Aurelia<|>2)\n##\n("relationship"<|>QUINTARA<|>AURELIA<|>Quintara brokered the hostage exchange between Firuzabad and Aurelia<|>2)\n##\n("relationship"<|>QUINTARA<|>FIRUZABAD<|>Quintara brokered the hostage exchange between Firuzabad and Aurelia<|>2)\n##\n("relationship"<|>SAMUEL NAMARA<|>ALHAMIA PRISON<|>Samuel Namara was a prisoner at Alhamia prison<|>8)\n##\n("relationship"<|>SAMUEL NAMARA<|>MEGGIE TAZBAH<|>Samuel Namara and Meggie Tazbah were exchanged in the same hostage release<|>2)\n##\n("relationship"<|>SAMUEL NAMARA<|>DURKE BATAGLANI<|>Samuel Namara and Durke Bataglani were exchanged in the same hostage release<|>2)\n##\n("relationship"<|>MEGGIE TAZBAH<|>DURKE BATAGLANI<|>Meggie Tazbah and Durke Bataglani were exchanged in the same hostage release<|>2)\n##\n("relationship"<|>SAMUEL NAMARA<|>FIRUZABAD<|>Samuel Namara was a hostage in Firuzabad<|>2)\n##\n("relationship"<|>MEGGIE TAZBAH<|>FIRUZABAD<|>Meggie Tazbah was a hostage in Firuzabad<|>2)\n##\n("relationship"<|>DURKE BATAGLANI<|>FIRUZABAD<|>Durke Bataglani was a hostage in Firuzabad<|>2)\n<|COMPLETE|>\n######################\n-Real Data-\n######################\nText:\nPrinted circuit board\nElectronics assemblies are based on use of a printed circuit board of one\nform or another to hold components. Construction of these printed circuit\nboards is critical to soldering processes in that different printed circuit\nboard types have different thermal characteristics which can greatly affect\nhow they must be soldered.\nIn principle a printed circuit board (PCB) sometimes called a printed\nwiring board (PWB) or simply printed board comprises: a base which is\na thin board of insulating material supporting all the components which\nmake up a circuit; conducting tracks usually copper on one or bOth sides\nof the base making up the interconnections between components. Component\nconnecting leads are electrically connected in some form of permanent\nor semi-permanent way usually by soldering to lands sometimes called\npads ~ the areas of track specially designated for component connection\npurposes. If lands have holes drilled or punched through the board to\nfacilitate component mounting the board is a through-hole printed circuit\nboard. If lands have no holes the board is a surface mounted printed circuit\nboard.\nTo clarify the term printed is somewhat misleading as tracks are not\nprinted directly onto the board. It refers instead to just one stage within the\nwhole printed circuit board manufacturing process where the conducting\ntrack layout sometimes called pattern or image may be produced using\nsome form of printing technique.\nPrinted circuit boards can be made in one of two main ways. First in an\nadditive process the conductive track may be added to the surface of the\nbase material. There\'s a number of ways in which this can be done. Second\nin a subtractive process where base material is supplied with its whole\nsurface covered with a conductive layer track pattern is defined and excess\nconductive material is removed leaving the required track. Sometimes\nboth processes may be combined to produce printed circuit boards with\nmore than one layer of conductive track.\n######################\nOutput:'}
17:27:46,293 httpx INFO HTTP Request: POST http://localhost:8080/chat/completions "HTTP/1.1 200 OK"
17:27:46,300 graphrag.llm.base.rate_limiting_llm INFO perf - llm.chat "Process" with 3 retries took 2.43818480707705. input_tokens=2089, output_tokens=537
17:27:50,197 httpx INFO HTTP Request: POST http://localhost:8080/chat/completions "HTTP/1.1 200 OK"
17:27:50,201 graphrag.llm.base.rate_limiting_llm INFO perf - llm.chat "extract-continuation-0" with 0 retries took 3.8983835568651557. input_tokens=28, output_tokens=921
17:27:50,763 httpx INFO HTTP Request: POST http://localhost:8080/chat/completions "HTTP/1.1 200 OK"
17:27:50,765 graphrag.llm.base.rate_limiting_llm INFO perf - llm.chat "extract-loopcheck-0" with 0 retries took 0.5632481111679226. input_tokens=30, output_tokens=1
17:27:53,637 httpx INFO HTTP Request: POST http://localhost:8080/chat/completions "HTTP/1.1 200 OK"
17:27:53,640 graphrag.llm.base.rate_limiting_llm INFO perf - llm.chat "extract-continuation-1" with 0 retries took 2.8733228009659797. input_tokens=28, output_tokens=615
17:27:53,699 root INFO Starting preprocessing of transition probabilities on graph with 23 nodes and 22 edges
17:27:53,699 root INFO Starting at time 1730478473.6998258
17:27:53,699 root INFO Beginning preprocessing of transition probabilities for 23 vertices
17:27:53,699 root INFO Completed 1 / 23 vertices
17:27:53,700 root INFO Completed 3 / 23 vertices
17:27:53,700 root INFO Completed 5 / 23 vertices
17:27:53,700 root INFO Completed 7 / 23 vertices
17:27:53,701 root INFO Completed 9 / 23 vertices
17:27:53,702 root INFO Completed 11 / 23 vertices
17:27:53,703 root INFO Completed 13 / 23 vertices
17:27:53,703 root INFO Completed 15 / 23 vertices
17:27:53,704 root INFO Completed 17 / 23 vertices
17:27:53,704 root INFO Completed 19 / 23 vertices
17:27:53,705 root INFO Completed 21 / 23 vertices
17:27:53,706 root INFO Completed 23 / 23 vertices
17:27:53,707 root INFO Completed preprocessing of transition probabilities for vertices
17:27:53,707 root INFO Beginning preprocessing of transition probabilities for 22 edges
17:27:53,707 root INFO Completed 1 / 22 edges
17:27:53,708 root INFO Completed 3 / 22 edges
17:27:53,709 root INFO Completed 5 / 22 edges
17:27:53,709 root INFO Completed 7 / 22 edges
17:27:53,710 root INFO Completed 9 / 22 edges
17:27:53,711 root INFO Completed 11 / 22 edges
17:27:53,712 root INFO Completed 13 / 22 edges
17:27:53,712 root INFO Completed 15 / 22 edges
17:27:53,713 root INFO Completed 17 / 22 edges
17:27:53,714 root INFO Completed 19 / 22 edges
17:27:53,715 root INFO Completed 21 / 22 edges
17:27:53,715 root INFO Completed preprocessing of transition probabilities for edges
17:27:53,715 root INFO Simulating walks on graph at time 1730478473.7152255
17:27:53,716 root INFO Walk iteration: 1/10
17:27:53,719 root INFO Walk iteration: 2/10
17:27:53,720 root INFO Walk iteration: 3/10
17:27:53,722 root INFO Walk iteration: 4/10
17:27:53,723 root INFO Walk iteration: 5/10
17:27:53,724 root INFO Walk iteration: 6/10
17:27:53,725 root INFO Walk iteration: 7/10
17:27:53,726 root INFO Walk iteration: 8/10
17:27:53,727 root INFO Walk iteration: 9/10
17:27:53,727 root INFO Walk iteration: 10/10
17:27:53,728 root INFO Learning embeddings at time 1730478473.7283804
17:27:53,728 gensim.models.word2vec INFO collecting all words and their counts
17:27:53,729 gensim.models.word2vec INFO PROGRESS: at sentence #0, processed 0 words, keeping 0 word types
17:27:53,730 gensim.models.word2vec INFO collected 23 word types from a corpus of 3440 raw words and 230 sentences
17:27:53,730 gensim.models.word2vec INFO Creating a fresh vocabulary
17:27:53,730 gensim.utils INFO Word2Vec lifecycle event {'msg': 'effective_min_count=0 retains 23 unique words (100.00% of original 23, drops 0)', 'datetime': '2024-11-01T17:27:53.730624', 'gensim': '4.3.3', 'python': '3.11.7 (main, Dec 15 2023, 18:12:31) [GCC 11.2.0]', 'platform': 'Linux-6.1.112-1-cip-amd64-x86_64-with-glibc2.36', 'event': 'prepare_vocab'}
17:27:53,731 gensim.utils INFO Word2Vec lifecycle event {'msg': 'effective_min_count=0 leaves 3440 word corpus (100.00% of original 3440, drops 0)', 'datetime': '2024-11-01T17:27:53.731194', 'gensim': '4.3.3', 'python': '3.11.7 (main, Dec 15 2023, 18:12:31) [GCC 11.2.0]', 'platform': 'Linux-6.1.112-1-cip-amd64-x86_64-with-glibc2.36', 'event': 'prepare_vocab'}
17:27:53,731 gensim.models.word2vec INFO deleting the raw counts dictionary of 23 items
17:27:53,732 gensim.models.word2vec INFO sample=0.001 downsamples 23 most-common words
17:27:53,732 gensim.utils INFO Word2Vec lifecycle event {'msg': 'downsampling leaves estimated 535.3260677822248 word corpus (15.6%% of prior 3440)', 'datetime': '2024-11-01T17:27:53.732811', 'gensim': '4.3.3', 'python': '3.11.7 (main, Dec 15 2023, 18:12:31) [GCC 11.2.0]', 'platform': 'Linux-6.1.112-1-cip-amd64-x86_64-with-glibc2.36', 'event': 'prepare_vocab'}
17:27:53,733 gensim.models.word2vec INFO estimated required memory for 23 words and 1536 dimensions: 294124 bytes
17:27:53,733 gensim.models.word2vec INFO resetting layer weights
17:27:53,734 gensim.utils INFO Word2Vec lifecycle event {'update': False, 'trim_rule': 'None', 'datetime': '2024-11-01T17:27:53.734219', 'gensim': '4.3.3', 'python': '3.11.7 (main, Dec 15 2023, 18:12:31) [GCC 11.2.0]', 'platform': 'Linux-6.1.112-1-cip-amd64-x86_64-with-glibc2.36', 'event': 'build_vocab'}
17:27:53,734 gensim.utils INFO Word2Vec lifecycle event {'msg': 'training model with 8 workers on 23 vocabulary and 1536 features, using sg=1 hs=0 sample=0.001 negative=5 window=2 shrink_windows=True', 'datetime': '2024-11-01T17:27:53.734422', 'gensim': '4.3.3', 'python': '3.11.7 (main, Dec 15 2023, 18:12:31) [GCC 11.2.0]', 'platform': 'Linux-6.1.112-1-cip-amd64-x86_64-with-glibc2.36', 'event': 'train'}
17:27:53,740 gensim.models.word2vec INFO EPOCH 0: training on 3440 raw words (540 effective words) took 0.0s, 139607 effective words/s
17:27:53,748 gensim.models.word2vec INFO EPOCH 1: training on 3440 raw words (507 effective words) took 0.0s, 122971 effective words/s
17:27:53,757 gensim.models.word2vec INFO EPOCH 2: training on 3440 raw words (530 effective words) took 0.0s, 76222 effective words/s
17:27:53,757 gensim.utils INFO Word2Vec lifecycle event {'msg': 'training on 10320 raw words (1577 effective words) took 0.0s, 68645 effective words/s', 'datetime': '2024-11-01T17:27:53.757458', 'gensim': '4.3.3', 'python': '3.11.7 (main, Dec 15 2023, 18:12:31) [GCC 11.2.0]', 'platform': 'Linux-6.1.112-1-cip-amd64-x86_64-with-glibc2.36', 'event': 'train'}
17:27:53,758 gensim.utils INFO Word2Vec lifecycle event {'params': 'Word2Vec<vocab=23, vector_size=1536, alpha=0.025>', 'datetime': '2024-11-01T17:27:53.758299', 'gensim': '4.3.3', 'python': '3.11.7 (main, Dec 15 2023, 18:12:31) [GCC 11.2.0]', 'platform': 'Linux-6.1.112-1-cip-amd64-x86_64-with-glibc2.36', 'event': 'created'}
17:27:53,758 root INFO Completed. Ending time is 1730478473.7584157 Elapsed time is -0.058589935302734375
17:27:53,769 root INFO Starting preprocessing of transition probabilities on graph with 23 nodes and 22 edges
17:27:53,769 root INFO Starting at time 1730478473.7697577
17:27:53,769 root INFO Beginning preprocessing of transition probabilities for 23 vertices
17:27:53,770 root INFO Completed 1 / 23 vertices
17:27:53,771 root INFO Completed 3 / 23 vertices
17:27:53,772 root INFO Completed 5 / 23 vertices
17:27:53,772 root INFO Completed 7 / 23 vertices
17:27:53,773 root INFO Completed 9 / 23 vertices
17:27:53,774 root INFO Completed 11 / 23 vertices
17:27:53,775 root INFO Completed 13 / 23 vertices
17:27:53,775 root INFO Completed 15 / 23 vertices
17:27:53,776 root INFO Completed 17 / 23 vertices
17:27:53,776 root INFO Completed 19 / 23 vertices
17:27:53,776 root INFO Completed 21 / 23 vertices
17:27:53,776 root INFO Completed 23 / 23 vertices
17:27:53,777 root INFO Completed preprocessing of transition probabilities for vertices
17:27:53,777 root INFO Beginning preprocessing of transition probabilities for 22 edges
17:27:53,778 root INFO Completed 1 / 22 edges
17:27:53,778 root INFO Completed 3 / 22 edges
17:27:53,779 root INFO Completed 5 / 22 edges
17:27:53,779 root INFO Completed 7 / 22 edges
17:27:53,780 root INFO Completed 9 / 22 edges
17:27:53,781 root INFO Completed 11 / 22 edges
17:27:53,781 root INFO Completed 13 / 22 edges
17:27:53,782 root INFO Completed 15 / 22 edges
17:27:53,783 root INFO Completed 17 / 22 edges
17:27:53,784 root INFO Completed 19 / 22 edges
17:27:53,784 root INFO Completed 21 / 22 edges
17:27:53,784 root INFO Completed preprocessing of transition probabilities for edges
17:27:53,785 root INFO Simulating walks on graph at time 1730478473.7854004
17:27:53,785 root INFO Walk iteration: 1/10
17:27:53,788 root INFO Walk iteration: 2/10
17:27:53,789 root INFO Walk iteration: 3/10
17:27:53,791 root INFO Walk iteration: 4/10
17:27:53,792 root INFO Walk iteration: 5/10
17:27:53,793 root INFO Walk iteration: 6/10
17:27:53,794 root INFO Walk iteration: 7/10
17:27:53,795 root INFO Walk iteration: 8/10
17:27:53,796 root INFO Walk iteration: 9/10
17:27:53,796 root INFO Walk iteration: 10/10
17:27:53,797 root INFO Learning embeddings at time 1730478473.7975402
17:27:53,797 gensim.models.word2vec INFO collecting all words and their counts
17:27:53,798 gensim.models.word2vec INFO PROGRESS: at sentence #0, processed 0 words, keeping 0 word types
17:27:53,799 gensim.models.word2vec INFO collected 23 word types from a corpus of 3440 raw words and 230 sentences
17:27:53,799 gensim.models.word2vec INFO Creating a fresh vocabulary
17:27:53,799 gensim.utils INFO Word2Vec lifecycle event {'msg': 'effective_min_count=0 retains 23 unique words (100.00% of original 23, drops 0)', 'datetime': '2024-11-01T17:27:53.799920', 'gensim': '4.3.3', 'python': '3.11.7 (main, Dec 15 2023, 18:12:31) [GCC 11.2.0]', 'platform': 'Linux-6.1.112-1-cip-amd64-x86_64-with-glibc2.36', 'event': 'prepare_vocab'}
17:27:53,800 gensim.utils INFO Word2Vec lifecycle event {'msg': 'effective_min_count=0 leaves 3440 word corpus (100.00% of original 3440, drops 0)', 'datetime': '2024-11-01T17:27:53.800482', 'gensim': '4.3.3', 'python': '3.11.7 (main, Dec 15 2023, 18:12:31) [GCC 11.2.0]', 'platform': 'Linux-6.1.112-1-cip-amd64-x86_64-with-glibc2.36', 'event': 'prepare_vocab'}
17:27:53,800 gensim.models.word2vec INFO deleting the raw counts dictionary of 23 items
17:27:53,801 gensim.models.word2vec INFO sample=0.001 downsamples 23 most-common words
17:27:53,801 gensim.utils INFO Word2Vec lifecycle event {'msg': 'downsampling leaves estimated 535.3260677822248 word corpus (15.6%% of prior 3440)', 'datetime': '2024-11-01T17:27:53.801191', 'gensim': '4.3.3', 'python': '3.11.7 (main, Dec 15 2023, 18:12:31) [GCC 11.2.0]', 'platform': 'Linux-6.1.112-1-cip-amd64-x86_64-with-glibc2.36', 'event': 'prepare_vocab'}
17:27:53,801 gensim.models.word2vec INFO estimated required memory for 23 words and 1536 dimensions: 294124 bytes
17:27:53,802 gensim.models.word2vec INFO resetting layer weights
17:27:53,802 gensim.utils INFO Word2Vec lifecycle event {'update': False, 'trim_rule': 'None', 'datetime': '2024-11-01T17:27:53.802871', 'gensim': '4.3.3', 'python': '3.11.7 (main, Dec 15 2023, 18:12:31) [GCC 11.2.0]', 'platform': 'Linux-6.1.112-1-cip-amd64-x86_64-with-glibc2.36', 'event': 'build_vocab'}
17:27:53,803 gensim.utils INFO Word2Vec lifecycle event {'msg': 'training model with 8 workers on 23 vocabulary and 1536 features, using sg=1 hs=0 sample=0.001 negative=5 window=2 shrink_windows=True', 'datetime': '2024-11-01T17:27:53.803321', 'gensim': '4.3.3', 'python': '3.11.7 (main, Dec 15 2023, 18:12:31) [GCC 11.2.0]', 'platform': 'Linux-6.1.112-1-cip-amd64-x86_64-with-glibc2.36', 'event': 'train'}
17:27:53,808 gensim.models.word2vec INFO EPOCH 0: training on 3440 raw words (540 effective words) took 0.0s, 177504 effective words/s
17:27:53,815 gensim.models.word2vec INFO EPOCH 1: training on 3440 raw words (507 effective words) took 0.0s, 111207 effective words/s
17:27:53,825 gensim.models.word2vec INFO EPOCH 2: training on 3440 raw words (530 effective words) took 0.0s, 66978 effective words/s
17:27:53,825 gensim.utils INFO Word2Vec lifecycle event {'msg': 'training on 10320 raw words (1577 effective words) took 0.0s, 72470 effective words/s', 'datetime': '2024-11-01T17:27:53.825763', 'gensim': '4.3.3', 'python': '3.11.7 (main, Dec 15 2023, 18:12:31) [GCC 11.2.0]', 'platform': 'Linux-6.1.112-1-cip-amd64-x86_64-with-glibc2.36', 'event': 'train'}
17:27:53,826 gensim.utils INFO Word2Vec lifecycle event {'params': 'Word2Vec<vocab=23, vector_size=1536, alpha=0.025>', 'datetime': '2024-11-01T17:27:53.826580', 'gensim': '4.3.3', 'python': '3.11.7 (main, Dec 15 2023, 18:12:31) [GCC 11.2.0]', 'platform': 'Linux-6.1.112-1-cip-amd64-x86_64-with-glibc2.36', 'event': 'created'}
17:27:53,826 root INFO Completed. Ending time is 1730478473.8266962 Elapsed time is -0.05693840980529785
17:27:53,872 graphrag.index.emit.parquet_table_emitter INFO emitting parquet table create_base_entity_graph.parquet
17:27:54,19 graphrag.index.run.workflow INFO dependencies for create_final_entities: ['create_base_entity_graph']
17:27:54,19 graphrag.utils.storage INFO read table from storage: create_base_entity_graph.parquet
17:27:54,28 datashaper.workflow.workflow INFO executing verb create_final_entities
17:27:54,32 graphrag.llm.openai.create_openai_client INFO Creating OpenAI client base_url=http://localhost:8080
17:27:54,69 graphrag.index.llm.load_llm INFO create TPM/RPM limiter for text: TPM=350000, RPM=10
17:27:54,69 graphrag.index.llm.load_llm INFO create concurrency limiter for text: 25
17:27:54,70 graphrag.index.operations.embed_text.strategies.openai INFO embedding 23 inputs via 21 snippets using 2 batches. max_batch_size=16, max_tokens=8191
17:27:55,282 httpx INFO HTTP Request: POST http://localhost:8080/embeddings "HTTP/1.1 200 OK"
17:27:55,296 graphrag.llm.base.rate_limiting_llm INFO perf - llm.embedding "Process" with 0 retries took 1.2241781789343804. input_tokens=143, output_tokens=0
17:27:55,302 httpx INFO HTTP Request: POST http://localhost:8080/embeddings "HTTP/1.1 200 OK"
17:27:55,325 graphrag.llm.base.rate_limiting_llm INFO perf - llm.embedding "Process" with 0 retries took 1.2541242649313062. input_tokens=534, output_tokens=0
17:27:55,329 graphrag.index.emit.parquet_table_emitter INFO emitting parquet table create_final_entities.parquet
17:27:55,486 graphrag.index.run.workflow INFO dependencies for create_final_nodes: ['create_base_entity_graph']
17:27:55,486 graphrag.utils.storage INFO read table from storage: create_base_entity_graph.parquet
17:27:55,494 datashaper.workflow.workflow INFO executing verb create_final_nodes
17:27:58,399 graphrag.index.emit.parquet_table_emitter INFO emitting parquet table create_final_nodes.parquet
17:27:58,551 graphrag.index.run.workflow INFO dependencies for create_final_communities: ['create_base_entity_graph']
17:27:58,552 graphrag.utils.storage INFO read table from storage: create_base_entity_graph.parquet
17:27:58,561 datashaper.workflow.workflow INFO executing verb create_final_communities
17:27:58,573 graphrag.index.emit.parquet_table_emitter INFO emitting parquet table create_final_communities.parquet
17:27:58,705 graphrag.index.run.workflow INFO dependencies for create_final_relationships: ['create_final_nodes', 'create_base_entity_graph']
17:27:58,708 graphrag.utils.storage INFO read table from storage: create_final_nodes.parquet
17:27:58,713 graphrag.utils.storage INFO read table from storage: create_base_entity_graph.parquet
17:27:58,722 datashaper.workflow.workflow INFO executing verb create_final_relationships
17:27:58,728 graphrag.index.emit.parquet_table_emitter INFO emitting parquet table create_final_relationships.parquet
17:27:58,863 graphrag.index.run.workflow INFO dependencies for create_final_text_units: ['create_base_text_units', 'create_final_relationships', 'create_final_entities']
17:27:58,864 graphrag.utils.storage INFO read table from storage: create_base_text_units.parquet
17:27:58,868 graphrag.utils.storage INFO read table from storage: create_final_relationships.parquet
17:27:58,870 graphrag.utils.storage INFO read table from storage: create_final_entities.parquet
17:27:58,882 datashaper.workflow.workflow INFO executing verb create_final_text_units
17:27:58,914 graphrag.index.emit.parquet_table_emitter INFO emitting parquet table create_final_text_units.parquet
17:27:59,62 graphrag.index.run.workflow INFO dependencies for create_final_community_reports: ['create_final_relationships', 'create_final_nodes']
17:27:59,63 graphrag.utils.storage INFO read table from storage: create_final_relationships.parquet
17:27:59,67 graphrag.utils.storage INFO read table from storage: create_final_nodes.parquet
17:27:59,76 datashaper.workflow.workflow INFO executing verb create_final_community_reports
17:27:59,80 graphrag.index.operations.summarize_communities.prepare_community_reports INFO Number of nodes at level=1 => 15
17:27:59,91 graphrag.index.operations.summarize_communities.prepare_community_reports INFO Number of nodes at level=0 => 47
17:28:01,889 httpx INFO HTTP Request: POST http://localhost:8080/chat/completions "HTTP/1.1 200 OK"
17:28:01,892 graphrag.llm.base.rate_limiting_llm INFO perf - llm.chat "create_community_report" with 0 retries took 2.7790869548916817. input_tokens=2090, output_tokens=357
17:28:03,15 httpx INFO HTTP Request: POST http://localhost:8080/chat/completions "HTTP/1.1 200 OK"
17:28:03,18 graphrag.llm.base.rate_limiting_llm INFO perf - llm.chat "create_community_report" with 0 retries took 3.9074111408554018. input_tokens=2825, output_tokens=629
17:28:05,239 httpx INFO HTTP Request: POST http://localhost:8080/chat/completions "HTTP/1.1 200 OK"
17:28:05,242 graphrag.llm.base.rate_limiting_llm INFO perf - llm.chat "create_community_report" with 0 retries took 2.212538796942681. input_tokens=2067, output_tokens=333
17:28:05,284 httpx INFO HTTP Request: POST http://localhost:8080/chat/completions "HTTP/1.1 200 OK"
17:28:05,287 graphrag.llm.base.rate_limiting_llm INFO perf - llm.chat "create_community_report" with 0 retries took 2.2552718641236424. input_tokens=2068, output_tokens=275
17:28:05,363 httpx INFO HTTP Request: POST http://localhost:8080/chat/completions "HTTP/1.1 200 OK"
17:28:05,366 graphrag.llm.base.rate_limiting_llm INFO perf - llm.chat "create_community_report" with 0 retries took 2.3386263898573816. input_tokens=2166, output_tokens=424
17:28:06,290 httpx INFO HTTP Request: POST http://localhost:8080/chat/completions "HTTP/1.1 200 OK"
17:28:06,293 graphrag.llm.base.rate_limiting_llm INFO perf - llm.chat "create_community_report" with 0 retries took 3.2671288170386106. input_tokens=3036, output_tokens=609
17:28:06,299 graphrag.index.emit.parquet_table_emitter INFO emitting parquet table create_final_community_reports.parquet
17:28:06,447 graphrag.index.run.workflow INFO dependencies for create_final_documents: ['create_final_text_units']
17:28:06,448 graphrag.utils.storage INFO read table from storage: create_final_text_units.parquet
17:28:06,458 datashaper.workflow.workflow INFO executing verb create_final_documents
17:28:06,464 graphrag.index.emit.parquet_table_emitter INFO emitting parquet table create_final_documents.parquet
17:28:06,482 graphrag.index.cli INFO All workflows completed successfully.
